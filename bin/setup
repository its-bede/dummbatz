#!/usr/bin/env ruby
# frozen_string_literal: true

require 'fileutils'

# path to your application root.
APP_ROOT = File.expand_path('..', __dir__)

def system!(*args)
  system(*args, exception: true)
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts '== Installing dependencies =='
  system! 'gem install bundler --conservative'
  system('bundle check') || system!('bundle install')

  # Install JavaScript dependencies
  system('yarn check --check-files') || system!('yarn install')

  direnv_path = `which direnv`.chomp!
  puts "\n== Preparing database =="
  system!("#{direnv_path} exec #{APP_ROOT} ./bin/create_db_container")

  puts "\n== Migrate and seed database =="
  puts "\n=== RAILS_ENV=development bin/rails db:migrate"
  system!("#{direnv_path} exec #{APP_ROOT} /bin/sh -c 'RAILS_ENV=development bin/rails db:migrate'")

  puts "\n=== RAILS_ENV=test bin/rails db:migrate"
  system!("#{direnv_path} exec #{APP_ROOT} /bin/sh -c 'RAILS_ENV=test bin/rails db:migrate'")

  puts "\n=== RAILS_ENV=development bin/rails db:seed"
  system!("#{direnv_path} exec #{APP_ROOT} /bin/sh -c 'RAILS_ENV=development bin/rails db:seed'")

  # puts "\n=== RAILS_ENV=development bin/rails db:fixtures:load"
  # system!("#{direnv_path} exec #{APP_ROOT} /bin/sh -c 'RAILS_ENV=development bin/rails db:fixtures:load'")

  puts "\n== Removing old logs and tempfiles =="
  system! 'bin/rails log:clear tmp:clear'

  puts "\n== Happy Coding! =="
end
